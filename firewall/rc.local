#!/bin/bash
#
# /etc/rc.local for KVM qemu hosts
#
# Author: @4llfr33d0m:matrix.org
#
##########################################################################

# Flush. Limpia todas las reglas
iptables -t nat -F
iptables -t filter -F
iptables -t mangle -F

# ip Nagios (monitor)
#monitor="XXX.XXX.XXX.XXX/32"

###########################################################################
## AQUI REGLAS DE FILTRADO POR DEFECTO
###########################################################################

# Por defecto todo el trafico entrante denegado
iptables -P INPUT DROP
iptables -P FORWARD DROP
iptables -P OUTPUT ACCEPT

iptables -t mangle -P PREROUTING DROP
iptables -t mangle -P INPUT DROP

# Dejamos que funcione la interfaz loopback
iptables -A INPUT -i lo -j ACCEPT

################
# MANGLE TABLE #
################

### Regla de optimizado. Aceptamos todo lo ya aceptado.
iptables -t mangle -A PREROUTING -m state --state RELATED,ESTABLISHED -j ACCEPT

### Accept loopback
iptables -t mangle -A PREROUTING -i lo -j ACCEPT

# Livbirt
iptables -t mangle -A PREROUTING -s 192.168.122.0/24 -i virbr0 -j ACCEPT

### Accept ping
iptables -t mangle -A PREROUTING -p icmp -m state --state NEW -j ACCEPT

### OPEN Ports of the Node
iptables -t mangle -A PREROUTING -p tcp -m state --state NEW -m tcp --dport 30333 -j ACCEPT

### Accept SSH
iptables -t mangle -A PREROUTING -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT

### Monitoring: Nagios ##cambiar la ip cuando tengamos monitoreo
#iptables -t mangle -A PREROUTING -s $monitor -p udp -m udp --dport 161 -j ACCEPT
#iptables -t mangle -A PREROUTING -s $monitor -p tcp -m tcp --dport 5666 -j ACCEPT

### Drop invalid packets ###
iptables -t mangle -A PREROUTING -m conntrack --ctstate INVALID -j DROP

### Drop TCP packets that are new and are not SYN ###
iptables -t mangle -A PREROUTING -p tcp ! --syn -m conntrack --ctstate NEW -j DROP

### Drop SYN packets with suspicious MSS value ###
iptables -t mangle -A PREROUTING -p tcp -m conntrack --ctstate NEW -m tcpmss ! --mss 536:65535 -j DROP

### Block packets with bogus TCP flags ###
iptables -t mangle -A PREROUTING -p tcp --tcp-flags FIN,SYN,RST,PSH,ACK,URG NONE -j DROP
iptables -t mangle -A PREROUTING -p tcp --tcp-flags FIN,SYN FIN,SYN -j DROP
iptables -t mangle -A PREROUTING -p tcp --tcp-flags SYN,RST SYN,RST -j DROP
iptables -t mangle -A PREROUTING -p tcp --tcp-flags SYN,FIN SYN,FIN -j DROP
iptables -t mangle -A PREROUTING -p tcp --tcp-flags FIN,RST FIN,RST -j DROP
iptables -t mangle -A PREROUTING -p tcp --tcp-flags FIN,ACK FIN -j DROP
iptables -t mangle -A PREROUTING -p tcp --tcp-flags ACK,URG URG -j DROP
iptables -t mangle -A PREROUTING -p tcp --tcp-flags ACK,FIN FIN -j DROP
iptables -t mangle -A PREROUTING -p tcp --tcp-flags ACK,PSH PSH -j DROP
iptables -t mangle -A PREROUTING -p tcp --tcp-flags ALL ALL -j DROP
iptables -t mangle -A PREROUTING -p tcp --tcp-flags ALL NONE -j DROP
iptables -t mangle -A PREROUTING -p tcp --tcp-flags ALL FIN,PSH,URG -j DROP
iptables -t mangle -A PREROUTING -p tcp --tcp-flags ALL SYN,FIN,PSH,URG -j DROP
iptables -t mangle -A PREROUTING -p tcp --tcp-flags ALL SYN,RST,ACK,FIN,URG -j DROP

### Block spoofed packets ###
iptables -t mangle -A PREROUTING -s 224.0.0.0/3 -j DROP
iptables -t mangle -A PREROUTING -s 169.254.0.0/16 -j DROP
iptables -t mangle -A PREROUTING -s 172.16.0.0/12 -j DROP
iptables -t mangle -A PREROUTING -s 192.0.2.0/24 -j DROP
iptables -t mangle -A PREROUTING -s 192.168.0.0/16 -j DROP
iptables -t mangle -A PREROUTING -s 10.0.0.0/8 -j DROP
iptables -t mangle -A PREROUTING -s 0.0.0.0/8 -j DROP
iptables -t mangle -A PREROUTING -s 240.0.0.0/5 -j DROP
iptables -t mangle -A PREROUTING -s 127.0.0.0/8 ! -i lo -j DROP

### Drop fragments in all chains ###
iptables -t mangle -A PREROUTING -f -j DROP

### Regla de optimizado. Aceptamos todo lo ya aceptado.
iptables -t mangle -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT

### Accept loopback
iptables -t mangle -A INPUT -i lo -j ACCEPT

### Accept ping
iptables -t mangle -A INPUT -p icmp -m state --state NEW -j ACCEPT

### Accept SSH
iptables -t mangle -A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT

### Monitoring: Nagios ##cambiar la ip cuando tengamos monitoreo
#iptables -t mangle -A INPUT -s $monitor -p udp -m udp --dport 161 -j ACCEPT
#iptables -t mangle -A INPUT -s $monitor -p tcp -m tcp --dport 5666 -j ACCEPT

### OPEN Ports of the Node
iptables -t mangle -A INPUT -p tcp -m state --state NEW -m tcp --dport 30333 -j ACCEPT

# Libvirt rule
iptables -t mangle -A POSTROUTING -o virbr0 -p udp -m udp --dport 68 -j CHECKSUM --checksum-fill

################
# FILTER TABLE #
################

### Accept loopback
iptables -t filter -A INPUT -i lo -j ACCEPT

### Accept ping
iptables -t filter -A INPUT -p icmp -m state --state NEW -j ACCEPT

### anti nmap
iptables -t filter -A INPUT -p tcp --tcp-flags SYN,ACK,FIN,RST RST -m limit --limit 1/s --limit-burst 2 -j DROP
iptables -t filter -A INPUT -m recent --name portscan --rcheck --seconds 500 -j DROP
iptables -t filter -A INPUT -m recent --name portscan --remove
iptables -t filter -A INPUT -p tcp -m tcp --dport 139 -m recent --name portscan --set -j DROP

### Regla de optimizado. Aceptamos todo lo ya aceptado.
iptables -t filter -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT

### Aceptamos SSH
iptables -t filter -A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT

### OPEN Ports of the Node
iptables -t filter -A INPUT -p tcp -m state --state NEW -m tcp --dport 30333 -j ACCEPT

# Libvirt rules for DNS and DHCP
iptables -t filter -A INPUT -i virbr0 -p udp -m udp --dport 53 -j ACCEPT
iptables -t filter -A INPUT -i virbr0 -p tcp -m tcp --dport 53 -j ACCEPT
iptables -t filter -A INPUT -i virbr0 -p udp -m udp --dport 67 -j ACCEPT
iptables -t filter -A INPUT -i virbr0 -p tcp -m tcp --dport 67 -j ACCEPT

### Monitoring: Nagios ##cambiar la ip cuando tengamos monitoreo
#iptables -t filter -A INPUT -s $monitor -p udp -m udp --dport 161 -j ACCEPT
#iptables -t filter -A INPUT -s $monitor -p tcp -m tcp --dport 5666 -j ACCEPT

### Limit connections per source IP ###
iptables -t filter -A INPUT -p tcp -m connlimit --connlimit-above 111 -j REJECT --reject-with tcp-reset

### Limit RST packets ###
iptables -t filter -A INPUT -p tcp --tcp-flags RST RST -m limit --limit 2/s --limit-burst 2 -j ACCEPT
iptables -t filter -A INPUT -p tcp --tcp-flags RST RST -j DROP

### Limit new TCP connections per second per source IP ###
iptables -t filter -A INPUT -p tcp -m conntrack --ctstate NEW -m limit --limit 60/s --limit-burst 20 -j ACCEPT
iptables -t filter -A INPUT -p tcp -m conntrack --ctstate NEW -j DROP

### Use SYNPROXY on all ports (disables connection limiting rule) ###
iptables -t filter -A INPUT -p tcp -m tcp -m conntrack --ctstate INVALID,UNTRACKED -j SYNPROXY --sack-perm --timestamp --wscale 7 --mss 1460
iptables -t filter -A INPUT -m conntrack --ctstate INVALID -j DROP

### SSH brute-force protection ###
iptables -t filter -A INPUT -p tcp --dport ssh -m conntrack --ctstate NEW -m recent --set
iptables -t filter -A INPUT -p tcp --dport ssh -m conntrack --ctstate NEW -m recent --update --seconds 60 --hitcount 10 -j DROP

### Ajustamos mss to mtu
iptables -t filter -A FORWARD -p tcp -m tcp --tcp-flags SYN,RST SYN -m tcpmss --mss 1400:65495 -j TCPMSS --clamp-mss-to-pmtu

### Accept optimization
iptables -t filter -A FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT

### Libvirt rules
iptables -t filter -A FORWARD -d 192.168.122.0/24 -o virbr0 -m conntrack --ctstate NEW,RELATED,ESTABLISHED -j ACCEPT
iptables -t filter -A FORWARD -s 192.168.122.0/24 -i virbr0 -j ACCEPT
iptables -t filter -A FORWARD -i virbr0 -o virbr0 -j ACCEPT
iptables -t filter -A FORWARD -o virbr0 -j REJECT --reject-with icmp-port-unreachable
iptables -t filter -A FORWARD -i virbr0 -j REJECT --reject-with icmp-port-unreachable
iptables -t filter -A FORWARD -i lo -j ACCEPT
iptables -t filter -A FORWARD -m state --state INVALID -j DROP
iptables -t filter -A FORWARD -j REJECT --reject-with icmp-host-prohibited
iptables -t filter -A OUTPUT -o virbr0 -p udp -m udp --dport 68 -j ACCEPT

# Libvirt Masquerade
iptables -t nat -A POSTROUTING -s 192.168.122.0/24 -d 224.0.0.0/24 -j RETURN
iptables -t nat -A POSTROUTING -s 192.168.122.0/24 -d 255.255.255.255/32 -j RETURN
iptables -t nat -A POSTROUTING -s 192.168.122.0/24 ! -d 192.168.122.0/24 -p tcp -j MASQUERADE --to-ports 1024-65535
iptables -t nat -A POSTROUTING -s 192.168.122.0/24 ! -d 192.168.122.0/24 -p udp -j MASQUERADE --to-ports 1024-65535
iptables -t nat -A POSTROUTING -s 192.168.122.0/24 ! -d 192.168.122.0/24 -j MASQUERADE

###########################################################################
## PORTs FORWARDING
###########################################################################

### Nagios
#iptables -t nat -A PREROUTING -p tcp -s $monitor -m tcp --dport 5666 -j DNAT --to-destination 192.168.122.10:5666

### SSH to virtual machine
#iptables -t nat -A PREROUTING -p tcp ! -s 192.168.0.0/16 -m tcp --dport [XXXX] -j DNAT --to-destination 192.168.122.10:22

### Ports to Node
iptables -t nat -A PREROUTING -p tcp ! -s 192.168.0.0/16 -m tcp --dport 30333 -j DNAT --to-destination 192.168.122.10:30333

touch /var/lock/subsys/local
# version 2019-04-11
exit 0

